version: '3.8'

services:
  redis:
    image: redis:7.4.0
    container_name: my-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webapp
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: mysql:8.0
    container_name: my-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: my_mysql_username
      MYSQL_PASSWORD: my_mysql_password
      MYSQL_DATABASE: database
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - webapp
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-08-29T01-40-52Z-cpuv1
    container_name: my-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    volumes:
      - minio_data:/data
    networks:
      - webapp
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cloud-file-storage-app
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://my-mysql:3306/database
      SPRING_DATASOURCE_USERNAME: my_mysql_username
      SPRING_DATASOURCE_PASSWORD: my_mysql_password
      SPRING_DATA_REDIS_URL: redis://my-redis:6379
      SPRING_DATA_REDIS_HOST: my-redis
      SPRING_DATA_REDIS_PORT: 6379
      MINIO_ENDPOINT: http://172.18.0.4:9000
    ports:
      - "8080:8080"
    networks:
      - webapp

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  webapp:
    driver: bridge
    name: webapp
